{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/randomImage/randomImage.js\";\n// Generates a random artwork (not based on category)\n// Used on the 404 page\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { galleryImages, galleryCount // total # of items in the gallery\n} from '../../constants/gallery/galleryDatabase';\n\nclass RandomImage extends React.Component {\n  render() {\n    // const for random image ID\n    const randomImageID = Math.floor(Math.random() * galleryCount) + 1; // Generate random image based on ID\n\n    const randomImg = galleryImages.map(item => {\n      if (item.id === randomImageID) {\n        return React.createElement(\"div\", {\n          className: \"random-image-component\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/art\",\n            search: \"?id=\".concat(item.id)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.src[0],\n          alt: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, item.title, \", \", item.date));\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, randomImg);\n  }\n\n}\n\nexport default withRouter(RandomImage);","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/randomImage/randomImage.js"],"names":["React","Link","withRouter","galleryImages","galleryCount","RandomImage","Component","render","randomImageID","Math","floor","random","randomImg","map","item","id","pathname","search","src","title","date"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SACIC,aADJ,EAEIC,YAFJ,CAEiB;AAFjB,OAGO,yCAHP;;AAMA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACtCC,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,YAA3B,IAA2C,CAAjE,CAFK,CAGL;;AACA,UAAMQ,SAAS,GAAGT,aAAa,CAACU,GAAd,CAAkBC,IAAI,IAAI;AACxC,UAAIA,IAAI,CAACC,EAAL,KAAYP,aAAhB,EAA+B;AAC3B,eACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAI;AACRQ,YAAAA,QAAQ,QADA;AAERC,YAAAA,MAAM,gBAASH,IAAI,CAACC,EAAd;AAFE,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI;AAAK,UAAA,GAAG,EAAED,IAAI,CAACI,GAAL,CAAS,CAAT,CAAV;AAAuB,UAAA,GAAG,EAAEJ,IAAI,CAACK,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIL,IAAI,CAACK,KAAT,QAAkBL,IAAI,CAACM,IAAvB,CARJ,CADJ;AAYH;AACJ,KAfiB,CAAlB;AAgBA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMR,SADN,CADJ;AAKH;;AA1BqC;;AA6B1C,eAAeV,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["// Generates a random artwork (not based on category)\n// Used on the 404 page\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n    galleryImages,\n    galleryCount // total # of items in the gallery\n} from '../../constants/gallery/galleryDatabase';\n\n\nclass RandomImage extends React.Component {\n    render() {\n        // const for random image ID\n        const randomImageID = Math.floor(Math.random() * galleryCount) + 1;\n        // Generate random image based on ID\n        const randomImg = galleryImages.map(item => {\n            if (item.id === randomImageID) {\n                return (\n                    <div className=\"random-image-component\">\n                        <Link to = {{ \n                            pathname:`/art`,\n                            search: `?id=${item.id}`\n                        }}\n                        >\n                            <img src={item.src[0]} alt={item.title} />\n                        </Link>\n                        <p>{item.title}, {item.date}</p>\n                    </div>\n                );\n            }\n        })\n        return (\n            <div>\n                { randomImg }\n            </div> \n        );\n    }\n}\n\nexport default withRouter(RandomImage);"]},"metadata":{},"sourceType":"module"}