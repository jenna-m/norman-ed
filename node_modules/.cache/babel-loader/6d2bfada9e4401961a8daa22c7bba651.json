{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/contact/contactForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feedback: '',\n      formSubmitted: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCancel() {\n    this.setState({\n      message: ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$props$env = this.props.env,\n          receiverEmail = _this$props$env.REACT_APP_EMAILJS_RECEIVER,\n          template = _this$props$env.REACT_APP_EMAILJS_TEMPLATEID,\n          user = _this$props$env.REACT_APP_EMAILJS_USERID;\n    this.sendFeedback(template, this.sender, receiverEmail, this.state.feedback, user);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  sendMessage(templateId, senderEmail, receiverEmail, message, user) {\n    window.emailjs.send('default_service', templateId, {\n      senderEmail,\n      receiverEmail,\n      message\n    }, user).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Error handling\n    .catch(err => console.error('Failed to send message. Error: ', err));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"contact-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"text-input\",\n      id: \"message-entry\",\n      name: \"message-entry\",\n      onChange: this.handleChange,\n      placeholder: \"Enter your message here\",\n      required: true,\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-cancel\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nContactForm.sender = 'sender@example.com';\nContactForm.propTypes = {\n  env: PropTypes.object.isRequired\n};\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/contact/contactForm.js"],"names":["React","PropTypes","ContactForm","Component","state","feedback","formSubmitted","handleCancel","bind","handleChange","handleSubmit","setState","message","event","target","value","preventDefault","props","env","receiverEmail","REACT_APP_EMAILJS_RECEIVER","template","REACT_APP_EMAILJS_TEMPLATEID","user","REACT_APP_EMAILJS_USERID","sendFeedback","sender","sendMessage","templateId","senderEmail","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n    state = {\n        feedback: '',\n        formSubmitted: false\n    };\n\n    handleCancel = this.handleCancel.bind(this);\n    handleChange = this.handleChange.bind(this);\n    handleSubmit = this.handleSubmit.bind(this);\n\n    static sender = 'sender@example.com';\n\n    handleCancel() {\n        this.setState({\n            message: ''\n        });\n      }\n    \n    handleChange(event) {\n    this.setState({\n        message: event.target.value\n    });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const {\n            REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n            REACT_APP_EMAILJS_TEMPLATEID: template,\n            REACT_APP_EMAILJS_USERID: user,\n        } = this.props.env;\n\n        this.sendFeedback(\n            template,\n            this.sender,\n            receiverEmail,\n            this.state.feedback,\n            user\n        );\n\n        this.setState({\n            formSubmitted: true\n        });\n    }\n\n    sendMessage(templateId, senderEmail, receiverEmail, message, user) {\n        window.emailjs.send('default_service', templateId, {\n            senderEmail, receiverEmail, message\n        },\n        user\n        )\n        .then(res => {\n            this.setState({\n                formEmailSent: true\n            });\n        })\n        // Error handling\n        .catch(err => console.error('Failed to send message. Error: ', err));\n    }\n\n    render() {\n        return (\n            <form className=\"contact-form\" onSubmit={this.handleSubmit}>\n                <textarea \n                    className=\"text-input\"\n                    id=\"message-entry\"\n                    name=\"message-entry\"\n                    onChange={this.handleChange}\n                    placeholder=\"Enter your message here\"\n                    required\n                    value={this.state.message}\n                />\n                <div className=\"button-group\">\n                    <button className=\"button-cancel\" onClick={this.handleCancel}>\n                        Cancel\n                    </button>\n                    <input type=\"submit\" value=\"Submit\" className=\"button-submit\" />\n                </div>\n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    env: PropTypes.object.isRequired\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}