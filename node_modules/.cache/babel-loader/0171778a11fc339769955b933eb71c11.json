{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/gallery/item.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { galleryImages } from '../../../constants/gallery/galleryDatabase';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n\n    if (currentItemId) {\n      currentItemId = parseInt(currentItemId, 10);\n    }\n\n    this.state = {\n      item: galleryImages.find(item => item.id === currentItemId)\n    };\n  }\n\n  render() {\n    const item = this.state.item;\n    /* pushes image route to itemImages array (not exactly what I want):\n    let itemImages = [];\n    item.src.forEach(function(image) {\n        itemImages.push(`${image}, `)\n    })\n    */\n\n    /*\n    1. find the length of item.src array (be sure to include the 0),\n    2. for the length of item.src array, render an <img> with\n    corresponding index # (item.src[i]), beginning at 0\n    3. push item.src[i]'s to an array, and use this array with the gallery component\n    */\n\n    const srcStart = 0;\n    const srcLength = item.src.length - 1; // -1, because arrays statrt at 0\n\n    return React.createElement(\"div\", {\n      className: \"item-details\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item-details-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.src[0],\n      alt: item.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, srcLength)), React.createElement(\"div\", {\n      className: \"item-details-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, item.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, item.date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, item.media), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, item.dimensions)));\n  }\n\n}\n\nexport default withRouter(Item);","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/gallery/item.js"],"names":["React","withRouter","galleryImages","Item","Component","constructor","props","currentItemId","URLSearchParams","window","location","search","get","parseInt","state","item","find","id","render","srcStart","srcLength","src","length","title","date","media","dimensions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,4CAA9B;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,aAAa,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,IAAhD,CAApB;;AAEA,QAAIL,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,GAAGM,QAAQ,CAACN,aAAD,EAAgB,EAAhB,CAAxB;AACD;;AAED,SAAKO,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEb,aAAa,CAACc,IAAd,CAAmBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYV,aAAvC;AADK,KAAb;AAID;;AAEHW,EAAAA,MAAM,GAAG;AACL,UAAMH,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AAEA;;;;;;;AAOA;;;;;;;AAOA,UAAMI,QAAQ,GAAG,CAAjB;AACA,UAAMC,SAAS,GAAGL,IAAI,CAACM,GAAL,CAASC,MAAT,GAAkB,CAApC,CAlBK,CAkBkC;;AAIvC,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEP,IAAI,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEF,IAAI,CAACM,GAAL,CAAS,CAAT,CAAV;AAAuB,MAAA,GAAG,EAAEN,IAAI,CAACQ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,SAAJ,CAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACQ,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIR,IAAI,CAACS,IAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,IAAI,CAACU,KAAT,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIV,IAAI,CAACW,UAAT,CAJJ,CALJ,CADJ;AAcH;;AApD8B;;AAuDnC,eAAezB,UAAU,CAACE,IAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { galleryImages } from '../../../constants/gallery/galleryDatabase';\n\n\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n        \n        if (currentItemId) {\n          currentItemId = parseInt(currentItemId, 10);\n        }\n\n        this.state = {\n          item: galleryImages.find(item => item.id === currentItemId)\n        };\n\n      }\n\n    render() {\n        const item = this.state.item;\n\n        /* pushes image route to itemImages array (not exactly what I want):\n        let itemImages = [];\n        item.src.forEach(function(image) {\n            itemImages.push(`${image}, `)\n        })\n        */\n\n        /*\n        1. find the length of item.src array (be sure to include the 0),\n        2. for the length of item.src array, render an <img> with\n        corresponding index # (item.src[i]), beginning at 0\n        3. push item.src[i]'s to an array, and use this array with the gallery component\n        */\n        \n        const srcStart = 0;       \n        const srcLength = item.src.length - 1; // -1, because arrays statrt at 0\n\n\n\n        return (\n            <div className=\"item-details\" key={item.id}>\n                <div className=\"item-details-img\">\n                    <img src={item.src[0]} alt={item.title} />\n                    <p>{srcLength}</p>\n                </div>\n                <div className=\"item-details-info\">\n                    <h1>{item.title}</h1>\n                    <p>{item.date}</p>\n                    <p>{item.media}</p>\n                    <p>{item.dimensions}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Item);"]},"metadata":{},"sourceType":"module"}