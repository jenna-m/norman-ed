{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/contact/contactForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: '',\n      formSubmitted: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCancel() {\n    this.setState({\n      message: ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$props$env = this.props.env,\n          receiverEmail = _this$props$env.REACT_APP_EMAILJS_RECEIVER,\n          template = _this$props$env.REACT_APP_EMAILJS_TEMPLATEID,\n          user = _this$props$env.REACT_APP_EMAILJS_USERID;\n    this.sendMessage(template, this.sender, receiverEmail, this.state.message, user);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  sendMessage(templateId, senderEmail, receiverEmail, message, user) {\n    window.emailjs.send('default_service', templateId, {\n      senderEmail,\n      receiverEmail,\n      message\n    }, user).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Error handling\n    .catch(err => console.error('Failed to send message. Error: ', err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}\n\nContactForm.sender = 'sender@example.com';\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/contact/contactForm.js"],"names":["React","PropTypes","ContactForm","Component","state","message","formSubmitted","handleCancel","bind","handleChange","handleSubmit","setState","event","target","value","preventDefault","props","env","receiverEmail","REACT_APP_EMAILJS_RECEIVER","template","REACT_APP_EMAILJS_TEMPLATEID","user","REACT_APP_EMAILJS_USERID","sendMessage","sender","templateId","senderEmail","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAD8B;AAAA,SAMtCC,YANsC,GAMvB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CANuB;AAAA,SAOtCC,YAPsC,GAOvB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAPuB;AAAA,SAQtCE,YARsC,GAQvB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CARuB;AAAA;;AAYtCD,EAAAA,YAAY,GAAG;AACX,SAAKI,QAAL,CAAc;AACVN,MAAAA,OAAO,EAAE;AADC,KAAd;AAGD;;AAEHI,EAAAA,YAAY,CAACG,KAAD,EAAQ;AACpB,SAAKD,QAAL,CAAc;AACVN,MAAAA,OAAO,EAAEO,KAAK,CAACC,MAAN,CAAaC;AADZ,KAAd;AAGC;;AAEDJ,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACG,cAAN;AADgB,4BAOZ,KAAKC,KAAL,CAAWC,GAPC;AAAA,UAIgBC,aAJhB,mBAIZC,0BAJY;AAAA,UAKkBC,QALlB,mBAKZC,4BALY;AAAA,UAMcC,IANd,mBAMZC,wBANY;AAShB,SAAKC,WAAL,CACIJ,QADJ,EAEI,KAAKK,MAFT,EAGIP,aAHJ,EAII,KAAKd,KAAL,CAAWC,OAJf,EAKIiB,IALJ;AAQA,SAAKX,QAAL,CAAc;AACVL,MAAAA,aAAa,EAAE;AADL,KAAd;AAGH;;AAEDkB,EAAAA,WAAW,CAACE,UAAD,EAAaC,WAAb,EAA0BT,aAA1B,EAAyCb,OAAzC,EAAkDiB,IAAlD,EAAwD;AAC/DM,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoB,iBAApB,EAAuCJ,UAAvC,EAAmD;AAC/CC,MAAAA,WAD+C;AAClCT,MAAAA,aADkC;AACnBb,MAAAA;AADmB,KAAnD,EAGAiB,IAHA,EAKCS,IALD,CAKMC,GAAG,IAAI;AACT,WAAKrB,QAAL,CAAc;AACVsB,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,KATD,EAUA;AAVA,KAWCC,KAXD,CAWOC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDF,GAAjD,CAXd;AAYH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAjEqC;;AAApCpC,W,CAUKuB,M,GAAS,oB;AA0DpB,eAAevB,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n    state = {\n        message: '',\n        formSubmitted: false\n    };\n\n    handleCancel = this.handleCancel.bind(this);\n    handleChange = this.handleChange.bind(this);\n    handleSubmit = this.handleSubmit.bind(this);\n\n    static sender = 'sender@example.com';\n\n    handleCancel() {\n        this.setState({\n            message: ''\n        });\n      }\n    \n    handleChange(event) {\n    this.setState({\n        message: event.target.value\n    });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const {\n            REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n            REACT_APP_EMAILJS_TEMPLATEID: template,\n            REACT_APP_EMAILJS_USERID: user,\n        } = this.props.env;\n\n        this.sendMessage(\n            template,\n            this.sender,\n            receiverEmail,\n            this.state.message,\n            user\n        );\n\n        this.setState({\n            formSubmitted: true\n        });\n    }\n\n    sendMessage(templateId, senderEmail, receiverEmail, message, user) {\n        window.emailjs.send('default_service', templateId, {\n            senderEmail, receiverEmail, message\n        },\n        user\n        )\n        .then(res => {\n            this.setState({\n                formEmailSent: true\n            });\n        })\n        // Error handling\n        .catch(err => console.error('Failed to send message. Error: ', err));\n    }\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}