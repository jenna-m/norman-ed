{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/gallery/item.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { galleryImages } from '../../../constants/gallery/galleryDatabase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport ItemImages from './itemImages/itemImages';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n\n    if (currentItemId) {\n      currentItemId = parseInt(currentItemId, 10);\n    }\n\n    this.state = {\n      item: galleryImages.find(item => item.id === currentItemId)\n    };\n    this.refreshPage = this.refreshPage.bind(this);\n    this.viewPrevious = this.viewPrevious.bind(this);\n    this.viewNext = this.viewNext.bind(this);\n  } // Refresh page when previous/next item button is clicked\n\n\n  refreshPage() {\n    window.location.reload();\n  }\n\n  viewPrevious(e) {\n    let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n\n    if (currentItemId) {\n      currentItemId = parseInt(currentItemId, 10);\n    }\n\n    this.setState = {\n      item: galleryImages.find(item => item.id === currentItemId)\n    };\n  }\n\n  viewNext(e) {\n    let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n\n    if (currentItemId) {\n      currentItemId = parseInt(currentItemId, 10);\n    }\n\n    this.setState = {\n      item: galleryImages.find(item => item.id === currentItemId)\n    };\n  }\n\n  render() {\n    const item = this.state.item; // consts for previous and next item IDs\n\n    const prevItem = item.id - 1;\n    const nextItem = item.id + 1;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"item-details\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ItemImages, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"item-details-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, item.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, item.date), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, item.media), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, item.dimensions), React.createElement(\"div\", {\n      className: \"prev-next-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/art\",\n        search: \"?id=\".concat(prevItem)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faChevronLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: {\n        pathname: \"/art\",\n        search: \"?id=\".concat(nextItem)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withRouter(Item);","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/norman-ed/client/src/components/pages/gallery/item.js"],"names":["React","Link","withRouter","galleryImages","FontAwesomeIcon","faChevronLeft","faChevronRight","ItemImages","Item","Component","constructor","props","currentItemId","URLSearchParams","window","location","search","get","parseInt","state","item","find","id","refreshPage","bind","viewPrevious","viewNext","reload","e","setState","render","prevItem","nextItem","title","date","media","dimensions","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,mCAA9C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAGA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,aAAa,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,IAAhD,CAApB;;AAEA,QAAIL,aAAJ,EAAmB;AACfA,MAAAA,aAAa,GAAGM,QAAQ,CAACN,aAAD,EAAgB,EAAhB,CAAxB;AACH;;AAED,SAAKO,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEjB,aAAa,CAACkB,IAAd,CAAmBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYV,aAAvC;AADG,KAAb;AAIA,SAAKW,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACH,GAjB8B,CAmB/B;;;AACAD,EAAAA,WAAW,GAAG;AACVT,IAAAA,MAAM,CAACC,QAAP,CAAgBY,MAAhB;AACH;;AAEDF,EAAAA,YAAY,CAACG,CAAD,EAAI;AACZ,QAAIhB,aAAa,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,IAAhD,CAApB;;AAEA,QAAIL,aAAJ,EAAmB;AACfA,MAAAA,aAAa,GAAGM,QAAQ,CAACN,aAAD,EAAgB,EAAhB,CAAxB;AACH;;AAED,SAAKiB,QAAL,GAAiB;AAAET,MAAAA,IAAI,EAAEjB,aAAa,CAACkB,IAAd,CAAmBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYV,aAAvC;AAAR,KAAjB;AAEH;;AAEDc,EAAAA,QAAQ,CAACE,CAAD,EAAI;AACR,QAAIhB,aAAa,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,EAA4CC,GAA5C,CAAgD,IAAhD,CAApB;;AAEA,QAAIL,aAAJ,EAAmB;AACfA,MAAAA,aAAa,GAAGM,QAAQ,CAACN,aAAD,EAAgB,EAAhB,CAAxB;AACH;;AAED,SAAKiB,QAAL,GAAiB;AAAET,MAAAA,IAAI,EAAEjB,aAAa,CAACkB,IAAd,CAAmBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYV,aAAvC;AAAR,KAAjB;AAEH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,UAAMV,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB,CADK,CAGL;;AACA,UAAMW,QAAQ,GAAGX,IAAI,CAACE,EAAL,GAAU,CAA3B;AACA,UAAMU,QAAQ,GAAGZ,IAAI,CAACE,EAAL,GAAU,CAA3B;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAEF,IAAI,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACa,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIb,IAAI,CAACc,IAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAId,IAAI,CAACe,KAAT,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIf,IAAI,CAACgB,UAAT,CAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAI;AACRC,QAAAA,QAAQ,QADA;AAERrB,QAAAA,MAAM,gBAASe,QAAT;AAFE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,EAUI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAI;AACRgC,QAAAA,QAAQ,QADA;AAERrB,QAAAA,MAAM,gBAASgB,QAAT;AAFE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1B,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAVJ,CALJ,CAFJ,CADJ,CADJ;AA8BH;;AAnF8B;;AAsFnC,eAAeJ,UAAU,CAACM,IAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { galleryImages } from '../../../constants/gallery/galleryDatabase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport ItemImages from './itemImages/itemImages';\n\n\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n        \n        if (currentItemId) {\n            currentItemId = parseInt(currentItemId, 10);\n        }\n\n        this.state = {\n            item: galleryImages.find(item => item.id === currentItemId)\n        };\n\n        this.refreshPage = this.refreshPage.bind(this);\n        this.viewPrevious = this.viewPrevious.bind(this);\n        this.viewNext = this.viewNext.bind(this);\n    }\n\n    // Refresh page when previous/next item button is clicked\n    refreshPage() {\n        window.location.reload()\n    }\n\n    viewPrevious(e) {\n        let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n        \n        if (currentItemId) {\n            currentItemId = parseInt(currentItemId, 10);\n        }\n\n        this.setState = ({ item: galleryImages.find(item => item.id === currentItemId) });\n\n    };\n\n    viewNext(e) {\n        let currentItemId = new URLSearchParams(window.location.search).get(\"id\");\n        \n        if (currentItemId) {\n            currentItemId = parseInt(currentItemId, 10);\n        }\n\n        this.setState = ({ item: galleryImages.find(item => item.id === currentItemId) });\n\n    }\n\n    render() {\n        const item = this.state.item;\n        \n        // consts for previous and next item IDs\n        const prevItem = item.id - 1;\n        const nextItem = item.id + 1;\n\n        return (\n            <div className=\"container\">\n                <div className=\"item-details\" key={item.id}>\n                    <ItemImages />\n                    <div className=\"item-details-info\">\n                        <h1>{item.title}</h1>\n                        <p>{item.date}</p>\n                        <p>{item.media}</p>\n                        <p>{item.dimensions}</p>\n                        <div className=\"prev-next-buttons\">\n                            {/* previous item button */}\n                            <Link to = {{ \n                                pathname:`/art`,\n                                search: `?id=${prevItem}`\n                                }}  >\n                                <FontAwesomeIcon icon={faChevronLeft} />\n                            </Link>\n\n                            {/* next item button */}\n                            <Link to = {{ \n                                pathname:`/art`,\n                                search: `?id=${nextItem}`\n                                }}  >\n                                <FontAwesomeIcon icon={faChevronRight} />\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Item);"]},"metadata":{},"sourceType":"module"}