{"ast":null,"code":"var _jsxFileName = \"/Users/Jenna/JavaScript/_Projects/norman-ed/src/components/contact/contactForm.js\";\n// Not yet fully functioning; still need to add name and email fields\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: '',\n      formSubmitted: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCancel() {\n    this.setState({\n      message: ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$props$env = this.props.env,\n          receiverEmail = _this$props$env.REACT_APP_EMAILJS_RECEIVER,\n          template = _this$props$env.REACT_APP_EMAILJS_TEMPLATEID,\n          user = _this$props$env.REACT_APP_EMAILJS_USERID;\n    this.sendMessage(template, this.sender, receiverEmail, this.state.message, user);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  sendMessage(templateId, senderEmail, receiverEmail, message, user) {\n    window.emailjs.send('default_service', templateId, {\n      senderEmail,\n      receiverEmail,\n      message\n    }, user).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Error handling\n    .catch(err => console.error('Failed to send message. Error: ', err));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"contact-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"text-input\",\n      id: \"message-entry\",\n      name: \"message-entry\",\n      onChange: this.handleChange,\n      placeholder: \"Enter your message here\",\n      required: true,\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-cancel\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"button-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\nContactForm.sender = 'sender@example.com';\nContactForm.propTypes = {\n  env: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/Jenna/JavaScript/_Projects/norman-ed/src/components/contact/contactForm.js"],"names":["React","Component","PropTypes","ContactForm","state","message","formSubmitted","handleCancel","bind","handleChange","handleSubmit","setState","event","target","value","preventDefault","props","env","receiverEmail","REACT_APP_EMAILJS_RECEIVER","template","REACT_APP_EMAILJS_TEMPLATEID","user","REACT_APP_EMAILJS_USERID","sendMessage","sender","templateId","senderEmail","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["// Not yet fully functioning; still need to add name and email fields\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n    state = {\n        message: '',\n        formSubmitted: false\n    };\n\n    handleCancel = this.handleCancel.bind(this);\n    handleChange = this.handleChange.bind(this);\n    handleSubmit = this.handleSubmit.bind(this);\n\n    static sender = 'sender@example.com';\n\n    handleCancel() {\n        this.setState({\n            message: ''\n        });\n      }\n    \n    handleChange(event) {\n    this.setState({\n        message: event.target.value\n    });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const {\n            REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n            REACT_APP_EMAILJS_TEMPLATEID: template,\n            REACT_APP_EMAILJS_USERID: user,\n        } = this.props.env;\n\n        this.sendMessage(\n            template,\n            this.sender,\n            receiverEmail,\n            this.state.message,\n            user\n        );\n\n        this.setState({\n            formSubmitted: true\n        });\n    }\n\n    sendMessage(templateId, senderEmail, receiverEmail, message, user) {\n        window.emailjs.send('default_service', templateId, {\n            senderEmail, receiverEmail, message\n        },\n        user\n        )\n        .then(res => {\n            this.setState({\n                formEmailSent: true\n            });\n        })\n        // Error handling\n        .catch(err => console.error('Failed to send message. Error: ', err));\n    }\n\n    render() {\n        return (\n            <form className=\"contact-form\" onSubmit={this.handleSubmit}>\n                <textarea \n                    className=\"text-input\"\n                    id=\"message-entry\"\n                    name=\"message-entry\"\n                    onChange={this.handleChange}\n                    placeholder=\"Enter your message here\"\n                    required\n                    value={this.state.message}\n                />\n                <div className=\"button-group\">\n                    <button className=\"button-cancel\" onClick={this.handleCancel}>\n                        Cancel\n                    </button>\n                    <input type=\"submit\" value=\"Submit\" className=\"button-submit\" />\n                </div>\n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    env: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}